name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repo
      - uses: actions/checkout@v3

      # 2. Set up QEMU & Buildx for Docker layer caching
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Cache Docker buildx state between runs
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 4. Build the Docker image, reading & writing the buildx cache
      - name: Build Docker image with cache
        run: |
          docker buildx create --use
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --load \
            -f Dockerfile \
            -t my-nl2sql-app:ci .
          # rotate the cache dir
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # 5. Run pytest inside that built image
      - name: Run tests in container
        run: |
          docker run --rm \
            -w /app \
            -e PYTHONPATH=/app \
            my-nl2sql-app:ci \
            pytest --maxfail=1 --disable-warnings -q
