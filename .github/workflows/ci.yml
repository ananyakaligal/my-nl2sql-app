name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout your code
      - uses: actions/checkout@v3

      # 2) QEMU + Buildx setup for multi-arch builds (standard)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3) Restore your previous BuildKit cache (if any)
      - name: Restore Docker build cache
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-cache

      # 4) Build your image, telling BuildKit to use that cache
      - name: Build Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
            --load \
            -f Dockerfile \
            -t my-nl2sql-app:ci .

      # 5) Save the cache only if it was a miss
      - name: Save Docker build cache
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-cache

      # 6) Run your tests inside the freshly built container
      - name: Run tests in container
        run: |
          docker run --rm \
            -w /app \
            -e PYTHONPATH=/app/src:/app \
            my-nl2sql-app:ci \
            pytest --maxfail=1 --disable-warnings -q
